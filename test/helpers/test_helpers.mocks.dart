// Mocks generated by Mockito 5.4.3 from annotations
// in verzo/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:ui' as _i16;

import 'package:flutter/material.dart' as _i3;
import 'package:graphql_flutter/graphql_flutter.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:stacked_services/stacked_services.dart' as _i2;
import 'package:verzo/services/authentication_service.dart' as _i4;
import 'package:verzo/services/billing_service.dart' as _i13;
import 'package:verzo/services/business_creation_service.dart' as _i6;
import 'package:verzo/services/dashboard_service.dart' as _i7;
import 'package:verzo/services/expense_service.dart' as _i9;
import 'package:verzo/services/merchant_service.dart' as _i8;
import 'package:verzo/services/products_services_service.dart' as _i12;
import 'package:verzo/services/purchase_service.dart' as _i10;
import 'package:verzo/services/sales_service.dart' as _i11;
import 'package:verzo/services/verification_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNavigationService_0 extends _i1.SmartFake
    implements _i2.NavigationService {
  _FakeNavigationService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueNotifier_1<T> extends _i1.SmartFake
    implements _i3.ValueNotifier<T> {
  _FakeValueNotifier_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthenticationResult_2 extends _i1.SmartFake
    implements _i4.AuthenticationResult {
  _FakeAuthenticationResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthenticationResult2_3 extends _i1.SmartFake
    implements _i4.AuthenticationResult2 {
  _FakeAuthenticationResult2_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateAccountWithEmailResult_4 extends _i1.SmartFake
    implements _i4.CreateAccountWithEmailResult {
  _FakeCreateAccountWithEmailResult_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerificationResult_5 extends _i1.SmartFake
    implements _i5.VerificationResult {
  _FakeVerificationResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBusinessOTPResult_6 extends _i1.SmartFake
    implements _i6.BusinessOTPResult {
  _FakeBusinessOTPResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBusinessCreationResult_7 extends _i1.SmartFake
    implements _i6.BusinessCreationResult {
  _FakeBusinessCreationResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBusinessUpdateResult_8 extends _i1.SmartFake
    implements _i6.BusinessUpdateResult {
  _FakeBusinessUpdateResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBusinessCard_9 extends _i1.SmartFake implements _i7.BusinessCard {
  _FakeBusinessCard_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserAndBusinessResult_10 extends _i1.SmartFake
    implements _i7.UserAndBusinessResult {
  _FakeUserAndBusinessResult_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserAndRoleResult_11 extends _i1.SmartFake
    implements _i7.UserAndRoleResult {
  _FakeUserAndRoleResult_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserUpdateResult_12 extends _i1.SmartFake
    implements _i7.UserUpdateResult {
  _FakeUserUpdateResult_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSudoCardCreationResult_13 extends _i1.SmartFake
    implements _i7.SudoCardCreationResult {
  _FakeSudoCardCreationResult_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpensesForWeek_14 extends _i1.SmartFake
    implements _i7.ExpensesForWeek {
  _FakeExpensesForWeek_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchasesForWeek_15 extends _i1.SmartFake
    implements _i7.PurchasesForWeek {
  _FakePurchasesForWeek_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpensesForMonth_16 extends _i1.SmartFake
    implements _i7.ExpensesForMonth {
  _FakeExpensesForMonth_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchasesForMonth_17 extends _i1.SmartFake
    implements _i7.PurchasesForMonth {
  _FakePurchasesForMonth_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeeklyInvoices_18 extends _i1.SmartFake
    implements _i7.WeeklyInvoices {
  _FakeWeeklyInvoices_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMonthlyInvoices_19 extends _i1.SmartFake
    implements _i7.MonthlyInvoices {
  _FakeMonthlyInvoices_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMerchantCreationResult_20 extends _i1.SmartFake
    implements _i8.MerchantCreationResult {
  _FakeMerchantCreationResult_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpenseCreationResult_21 extends _i1.SmartFake
    implements _i9.ExpenseCreationResult {
  _FakeExpenseCreationResult_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpenses_22 extends _i1.SmartFake implements _i9.Expenses {
  _FakeExpenses_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpenseUpdateResult_23 extends _i1.SmartFake
    implements _i9.ExpenseUpdateResult {
  _FakeExpenseUpdateResult_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExpenseStatusResult_24 extends _i1.SmartFake
    implements _i9.ExpenseStatusResult {
  _FakeExpenseStatusResult_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseCreationResult_25 extends _i1.SmartFake
    implements _i10.PurchaseCreationResult {
  _FakePurchaseCreationResult_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchases_26 extends _i1.SmartFake implements _i10.Purchases {
  _FakePurchases_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseStatusResult_27 extends _i1.SmartFake
    implements _i10.PurchaseStatusResult {
  _FakePurchaseStatusResult_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchaseUpdateResult_28 extends _i1.SmartFake
    implements _i10.PurchaseUpdateResult {
  _FakePurchaseUpdateResult_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaleCreationResult_29 extends _i1.SmartFake
    implements _i11.SaleCreationResult {
  _FakeSaleCreationResult_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaleUpdateResult_30 extends _i1.SmartFake
    implements _i11.SaleUpdateResult {
  _FakeSaleUpdateResult_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSales_31 extends _i1.SmartFake implements _i11.Sales {
  _FakeSales_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaleStatusResult_32 extends _i1.SmartFake
    implements _i11.SaleStatusResult {
  _FakeSaleStatusResult_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerCreationResult_33 extends _i1.SmartFake
    implements _i11.CustomerCreationResult {
  _FakeCustomerCreationResult_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomers_34 extends _i1.SmartFake implements _i11.Customers {
  _FakeCustomers_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerUpdateResult_35 extends _i1.SmartFake
    implements _i11.CustomerUpdateResult {
  _FakeCustomerUpdateResult_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductCreationResult_36 extends _i1.SmartFake
    implements _i12.ProductCreationResult {
  _FakeProductCreationResult_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductUnitCreationResult_37 extends _i1.SmartFake
    implements _i12.ProductUnitCreationResult {
  _FakeProductUnitCreationResult_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductUpdateResult_38 extends _i1.SmartFake
    implements _i12.ProductUpdateResult {
  _FakeProductUpdateResult_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducts_39 extends _i1.SmartFake implements _i12.Products {
  _FakeProducts_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServiceCreationResult_40 extends _i1.SmartFake
    implements _i12.ServiceCreationResult {
  _FakeServiceCreationResult_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServiceUnitCreationResult_41 extends _i1.SmartFake
    implements _i12.ServiceUnitCreationResult {
  _FakeServiceUnitCreationResult_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServiceUpdateResult_42 extends _i1.SmartFake
    implements _i12.ServiceUpdateResult {
  _FakeServiceUpdateResult_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServices_43 extends _i1.SmartFake implements _i12.Services {
  _FakeServices_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubscriptions_44 extends _i1.SmartFake
    implements _i13.Subscriptions {
  _FakeSubscriptions_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubscriptionCreationResult_45 extends _i1.SmartFake
    implements _i13.SubscriptionCreationResult {
  _FakeSubscriptionCreationResult_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubscriptionCreationResultB_46 extends _i1.SmartFake
    implements _i13.SubscriptionCreationResultB {
  _FakeSubscriptionCreationResultB_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i2.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i3.GlobalKey<_i3.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i3.GlobalKey<_i3.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i2.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<T?>? navigateWithTransition<T>(
    _i3.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    dynamic curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i2.Transition? transitionClass,
    _i2.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? replaceWithTransition<T>(
    _i3.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    dynamic curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i2.Transition? transitionClass,
    _i2.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i3.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i3.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? navigateToView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    dynamic curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i2.Transition? transition,
    _i2.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i3.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? clearStackAndShowView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? clearTillFirstAndShowView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);

  @override
  _i15.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i3.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i15.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i2.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i2.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i2.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i15.Future<_i2.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i15.Future<_i2.SheetResponse<dynamic>?>.value(),
      ) as _i15.Future<_i2.SheetResponse<dynamic>?>);

  @override
  _i15.Future<_i2.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i16.Color? barrierColor = const _i16.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i15.Future<_i2.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i15.Future<_i2.SheetResponse<T>?>.value(),
      ) as _i15.Future<_i2.SheetResponse<T>?>);

  @override
  void completeSheet(_i2.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i2.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i2.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i3.Widget Function(
      _i3.BuildContext,
      _i2.DialogRequest<dynamic>,
      dynamic Function(_i2.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i2.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i16.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i16.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i2.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i15.Future<_i2.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i15.Future<_i2.DialogResponse<dynamic>?>.value(),
      ) as _i15.Future<_i2.DialogResponse<dynamic>?>);

  @override
  _i15.Future<_i2.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i16.Color? barrierColor = const _i16.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i15.Future<_i2.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i15.Future<_i2.DialogResponse<T>?>.value(),
      ) as _i15.Future<_i2.DialogResponse<T>?>);

  @override
  _i15.Future<_i2.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i16.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i16.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i2.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i15.Future<_i2.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i15.Future<_i2.DialogResponse<dynamic>?>.value(),
      ) as _i15.Future<_i2.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i2.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i4.AuthenticationService {
  @override
  _i2.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
        returnValueForMissingStub: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i2.NavigationService);

  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i4.AuthenticationResult> loginWithEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i15.Future<_i4.AuthenticationResult>.value(
            _FakeAuthenticationResult_2(
          this,
          Invocation.method(
            #loginWithEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i4.AuthenticationResult>.value(
            _FakeAuthenticationResult_2(
          this,
          Invocation.method(
            #loginWithEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i15.Future<_i4.AuthenticationResult>);

  @override
  _i15.Future<_i4.AuthenticationResult2> refreshToken({String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
          {#userId: userId},
        ),
        returnValue: _i15.Future<_i4.AuthenticationResult2>.value(
            _FakeAuthenticationResult2_3(
          this,
          Invocation.method(
            #refreshToken,
            [],
            {#userId: userId},
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i4.AuthenticationResult2>.value(
            _FakeAuthenticationResult2_3(
          this,
          Invocation.method(
            #refreshToken,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i15.Future<_i4.AuthenticationResult2>);

  @override
  _i15.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i4.CreateAccountWithEmailResult> createAccountWithEmail({
    required String? email,
    required String? password,
    required String? fullName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccountWithEmail,
          [],
          {
            #email: email,
            #password: password,
            #fullName: fullName,
          },
        ),
        returnValue: _i15.Future<_i4.CreateAccountWithEmailResult>.value(
            _FakeCreateAccountWithEmailResult_4(
          this,
          Invocation.method(
            #createAccountWithEmail,
            [],
            {
              #email: email,
              #password: password,
              #fullName: fullName,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i4.CreateAccountWithEmailResult>.value(
                _FakeCreateAccountWithEmailResult_4(
          this,
          Invocation.method(
            #createAccountWithEmail,
            [],
            {
              #email: email,
              #password: password,
              #fullName: fullName,
            },
          ),
        )),
      ) as _i15.Future<_i4.CreateAccountWithEmailResult>);
}

/// A class which mocks [VerificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerificationService extends _i1.Mock
    implements _i5.VerificationService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i5.VerificationResult> verifyOTP({required num? code}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [],
          {#code: code},
        ),
        returnValue:
            _i15.Future<_i5.VerificationResult>.value(_FakeVerificationResult_5(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {#code: code},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.VerificationResult>.value(_FakeVerificationResult_5(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {#code: code},
          ),
        )),
      ) as _i15.Future<_i5.VerificationResult>);

  @override
  _i15.Future<bool> resendVerification() => (super.noSuchMethod(
        Invocation.method(
          #resendVerification,
          [],
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);
}

/// A class which mocks [BusinessCreationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBusinessCreationService extends _i1.Mock
    implements _i6.BusinessCreationService {
  @override
  _i2.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
        returnValueForMissingStub: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i2.NavigationService);

  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i6.BusinessOTPResult> sendVerificationOTP(
          {required String? bvnNumber}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationOTP,
          [],
          {#bvnNumber: bvnNumber},
        ),
        returnValue:
            _i15.Future<_i6.BusinessOTPResult>.value(_FakeBusinessOTPResult_6(
          this,
          Invocation.method(
            #sendVerificationOTP,
            [],
            {#bvnNumber: bvnNumber},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i6.BusinessOTPResult>.value(_FakeBusinessOTPResult_6(
          this,
          Invocation.method(
            #sendVerificationOTP,
            [],
            {#bvnNumber: bvnNumber},
          ),
        )),
      ) as _i15.Future<_i6.BusinessOTPResult>);

  @override
  _i15.Future<_i6.BusinessCreationResult> createBusinessProfile({
    required String? businessName,
    required String? businessEmail,
    required String? businessMobile,
    required String? businessCategoryId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBusinessProfile,
          [],
          {
            #businessName: businessName,
            #businessEmail: businessEmail,
            #businessMobile: businessMobile,
            #businessCategoryId: businessCategoryId,
          },
        ),
        returnValue: _i15.Future<_i6.BusinessCreationResult>.value(
            _FakeBusinessCreationResult_7(
          this,
          Invocation.method(
            #createBusinessProfile,
            [],
            {
              #businessName: businessName,
              #businessEmail: businessEmail,
              #businessMobile: businessMobile,
              #businessCategoryId: businessCategoryId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i6.BusinessCreationResult>.value(
                _FakeBusinessCreationResult_7(
          this,
          Invocation.method(
            #createBusinessProfile,
            [],
            {
              #businessName: businessName,
              #businessEmail: businessEmail,
              #businessMobile: businessMobile,
              #businessCategoryId: businessCategoryId,
            },
          ),
        )),
      ) as _i15.Future<_i6.BusinessCreationResult>);

  @override
  _i15.Future<bool> createBusinessAccount({
    required String? identityNumber,
    required String? identityId,
    required String? otp,
    required String? addressLine1,
    required String? city,
    required String? dob,
    required String? postalCode,
    required String? state,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBusinessAccount,
          [],
          {
            #identityNumber: identityNumber,
            #identityId: identityId,
            #otp: otp,
            #addressLine1: addressLine1,
            #city: city,
            #dob: dob,
            #postalCode: postalCode,
            #state: state,
          },
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i6.BusinessUpdateResult> updateBusiness({
    String? businessName,
    String? businessEmail,
    String? businessMobile,
    String? businessCategoryId,
    String? logo,
    required String? businessId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBusiness,
          [],
          {
            #businessName: businessName,
            #businessEmail: businessEmail,
            #businessMobile: businessMobile,
            #businessCategoryId: businessCategoryId,
            #logo: logo,
            #businessId: businessId,
          },
        ),
        returnValue: _i15.Future<_i6.BusinessUpdateResult>.value(
            _FakeBusinessUpdateResult_8(
          this,
          Invocation.method(
            #updateBusiness,
            [],
            {
              #businessName: businessName,
              #businessEmail: businessEmail,
              #businessMobile: businessMobile,
              #businessCategoryId: businessCategoryId,
              #logo: logo,
              #businessId: businessId,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i6.BusinessUpdateResult>.value(
            _FakeBusinessUpdateResult_8(
          this,
          Invocation.method(
            #updateBusiness,
            [],
            {
              #businessName: businessName,
              #businessEmail: businessEmail,
              #businessMobile: businessMobile,
              #businessCategoryId: businessCategoryId,
              #logo: logo,
              #businessId: businessId,
            },
          ),
        )),
      ) as _i15.Future<_i6.BusinessUpdateResult>);

  @override
  _i15.Future<List<_i6.BusinessCategory>> getBusinessCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBusinessCategories,
          [],
        ),
        returnValue: _i15.Future<List<_i6.BusinessCategory>>.value(
            <_i6.BusinessCategory>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i6.BusinessCategory>>.value(
                <_i6.BusinessCategory>[]),
      ) as _i15.Future<List<_i6.BusinessCategory>>);

  @override
  _i15.Future<List<_i6.BusinessTask>> getBusinessTasks({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBusinessTasks,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue:
            _i15.Future<List<_i6.BusinessTask>>.value(<_i6.BusinessTask>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i6.BusinessTask>>.value(<_i6.BusinessTask>[]),
      ) as _i15.Future<List<_i6.BusinessTask>>);

  @override
  _i15.Future<List<_i6.BusinessAccountStatement>> viewBusinessAccountStatement(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewBusinessAccountStatement,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i6.BusinessAccountStatement>>.value(
            <_i6.BusinessAccountStatement>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i6.BusinessAccountStatement>>.value(
                <_i6.BusinessAccountStatement>[]),
      ) as _i15.Future<List<_i6.BusinessAccountStatement>>);
}

/// A class which mocks [DashboardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardService extends _i1.Mock implements _i7.DashboardService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<List<_i7.User>> getUsersByBusiness() => (super.noSuchMethod(
        Invocation.method(
          #getUsersByBusiness,
          [],
        ),
        returnValue: _i15.Future<List<_i7.User>>.value(<_i7.User>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i7.User>>.value(<_i7.User>[]),
      ) as _i15.Future<List<_i7.User>>);

  @override
  _i15.Future<String> generateCardToken({
    required String? cardId,
    required String? businessId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateCardToken,
          [],
          {
            #cardId: cardId,
            #businessId: businessId,
          },
        ),
        returnValue: _i15.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #generateCardToken,
            [],
            {
              #cardId: cardId,
              #businessId: businessId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #generateCardToken,
            [],
            {
              #cardId: cardId,
              #businessId: businessId,
            },
          ),
        )),
      ) as _i15.Future<String>);

  @override
  _i15.Future<List<_i7.BusinessCard>> getCardsByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardsByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue:
            _i15.Future<List<_i7.BusinessCard>>.value(<_i7.BusinessCard>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i7.BusinessCard>>.value(<_i7.BusinessCard>[]),
      ) as _i15.Future<List<_i7.BusinessCard>>);

  @override
  _i15.Future<_i7.BusinessCard> getCardsById({required String? cardId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCardsById,
          [],
          {#cardId: cardId},
        ),
        returnValue: _i15.Future<_i7.BusinessCard>.value(_FakeBusinessCard_9(
          this,
          Invocation.method(
            #getCardsById,
            [],
            {#cardId: cardId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.BusinessCard>.value(_FakeBusinessCard_9(
          this,
          Invocation.method(
            #getCardsById,
            [],
            {#cardId: cardId},
          ),
        )),
      ) as _i15.Future<_i7.BusinessCard>);

  @override
  _i15.Future<List<_i7.BusinessCard>> getUserCardsByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserCardsByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue:
            _i15.Future<List<_i7.BusinessCard>>.value(<_i7.BusinessCard>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i7.BusinessCard>>.value(<_i7.BusinessCard>[]),
      ) as _i15.Future<List<_i7.BusinessCard>>);

  @override
  _i15.Future<List<_i7.CardTransactions>> viewCardTransactions(
          {required String? cardId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewCardTransactions,
          [],
          {#cardId: cardId},
        ),
        returnValue: _i15.Future<List<_i7.CardTransactions>>.value(
            <_i7.CardTransactions>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i7.CardTransactions>>.value(
                <_i7.CardTransactions>[]),
      ) as _i15.Future<List<_i7.CardTransactions>>);

  @override
  _i15.Future<_i7.UserAndBusinessResult> getUserAndBusinessData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserAndBusinessData,
          [],
        ),
        returnValue: _i15.Future<_i7.UserAndBusinessResult>.value(
            _FakeUserAndBusinessResult_10(
          this,
          Invocation.method(
            #getUserAndBusinessData,
            [],
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i7.UserAndBusinessResult>.value(
            _FakeUserAndBusinessResult_10(
          this,
          Invocation.method(
            #getUserAndBusinessData,
            [],
          ),
        )),
      ) as _i15.Future<_i7.UserAndBusinessResult>);

  @override
  _i15.Future<_i7.UserAndRoleResult> getUserAndRoleData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserAndRoleData,
          [],
        ),
        returnValue:
            _i15.Future<_i7.UserAndRoleResult>.value(_FakeUserAndRoleResult_11(
          this,
          Invocation.method(
            #getUserAndRoleData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.UserAndRoleResult>.value(_FakeUserAndRoleResult_11(
          this,
          Invocation.method(
            #getUserAndRoleData,
            [],
          ),
        )),
      ) as _i15.Future<_i7.UserAndRoleResult>);

  @override
  _i15.Future<_i7.UserUpdateResult> updateUser({
    String? fullname,
    String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [],
          {
            #fullname: fullname,
            #email: email,
          },
        ),
        returnValue:
            _i15.Future<_i7.UserUpdateResult>.value(_FakeUserUpdateResult_12(
          this,
          Invocation.method(
            #updateUser,
            [],
            {
              #fullname: fullname,
              #email: email,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.UserUpdateResult>.value(_FakeUserUpdateResult_12(
          this,
          Invocation.method(
            #updateUser,
            [],
            {
              #fullname: fullname,
              #email: email,
            },
          ),
        )),
      ) as _i15.Future<_i7.UserUpdateResult>);

  @override
  _i15.Future<bool> resetPassword({
    required String? oldPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i7.SudoCardCreationResult> createSudoCard({
    required String? businessId,
    String? assignedUserId,
    List<_i7.SudoCardSpendingLimits>? spendingLimits,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSudoCard,
          [],
          {
            #businessId: businessId,
            #assignedUserId: assignedUserId,
            #spendingLimits: spendingLimits,
          },
        ),
        returnValue: _i15.Future<_i7.SudoCardCreationResult>.value(
            _FakeSudoCardCreationResult_13(
          this,
          Invocation.method(
            #createSudoCard,
            [],
            {
              #businessId: businessId,
              #assignedUserId: assignedUserId,
              #spendingLimits: spendingLimits,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.SudoCardCreationResult>.value(
                _FakeSudoCardCreationResult_13(
          this,
          Invocation.method(
            #createSudoCard,
            [],
            {
              #businessId: businessId,
              #assignedUserId: assignedUserId,
              #spendingLimits: spendingLimits,
            },
          ),
        )),
      ) as _i15.Future<_i7.SudoCardCreationResult>);

  @override
  _i15.Future<bool> userRequestCard({required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #userRequestCard,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i7.ExpensesForWeek> getExpensesForWeek({
    required String? businessId,
    bool? weekly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpensesForWeek,
          [],
          {
            #businessId: businessId,
            #weekly: weekly,
          },
        ),
        returnValue:
            _i15.Future<_i7.ExpensesForWeek>.value(_FakeExpensesForWeek_14(
          this,
          Invocation.method(
            #getExpensesForWeek,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.ExpensesForWeek>.value(_FakeExpensesForWeek_14(
          this,
          Invocation.method(
            #getExpensesForWeek,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
      ) as _i15.Future<_i7.ExpensesForWeek>);

  @override
  _i15.Future<_i7.PurchasesForWeek> getPurchasesForWeek({
    required String? businessId,
    bool? weekly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchasesForWeek,
          [],
          {
            #businessId: businessId,
            #weekly: weekly,
          },
        ),
        returnValue:
            _i15.Future<_i7.PurchasesForWeek>.value(_FakePurchasesForWeek_15(
          this,
          Invocation.method(
            #getPurchasesForWeek,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.PurchasesForWeek>.value(_FakePurchasesForWeek_15(
          this,
          Invocation.method(
            #getPurchasesForWeek,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
      ) as _i15.Future<_i7.PurchasesForWeek>);

  @override
  _i15.Future<_i7.ExpensesForMonth> getExpensesForMonth({
    required String? businessId,
    bool? monthly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpensesForMonth,
          [],
          {
            #businessId: businessId,
            #monthly: monthly,
          },
        ),
        returnValue:
            _i15.Future<_i7.ExpensesForMonth>.value(_FakeExpensesForMonth_16(
          this,
          Invocation.method(
            #getExpensesForMonth,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.ExpensesForMonth>.value(_FakeExpensesForMonth_16(
          this,
          Invocation.method(
            #getExpensesForMonth,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
      ) as _i15.Future<_i7.ExpensesForMonth>);

  @override
  _i15.Future<_i7.PurchasesForMonth> getPurchasesForMonth({
    required String? businessId,
    bool? monthly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchasesForMonth,
          [],
          {
            #businessId: businessId,
            #monthly: monthly,
          },
        ),
        returnValue:
            _i15.Future<_i7.PurchasesForMonth>.value(_FakePurchasesForMonth_17(
          this,
          Invocation.method(
            #getPurchasesForMonth,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.PurchasesForMonth>.value(_FakePurchasesForMonth_17(
          this,
          Invocation.method(
            #getPurchasesForMonth,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
      ) as _i15.Future<_i7.PurchasesForMonth>);

  @override
  _i15.Future<_i7.WeeklyInvoices> totalWeeklyInvoicesAmount({
    required String? businessId,
    bool? weekly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #totalWeeklyInvoicesAmount,
          [],
          {
            #businessId: businessId,
            #weekly: weekly,
          },
        ),
        returnValue:
            _i15.Future<_i7.WeeklyInvoices>.value(_FakeWeeklyInvoices_18(
          this,
          Invocation.method(
            #totalWeeklyInvoicesAmount,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.WeeklyInvoices>.value(_FakeWeeklyInvoices_18(
          this,
          Invocation.method(
            #totalWeeklyInvoicesAmount,
            [],
            {
              #businessId: businessId,
              #weekly: weekly,
            },
          ),
        )),
      ) as _i15.Future<_i7.WeeklyInvoices>);

  @override
  _i15.Future<_i7.MonthlyInvoices> totalMonthlyInvoicesAmount({
    required String? businessId,
    bool? monthly = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #totalMonthlyInvoicesAmount,
          [],
          {
            #businessId: businessId,
            #monthly: monthly,
          },
        ),
        returnValue:
            _i15.Future<_i7.MonthlyInvoices>.value(_FakeMonthlyInvoices_19(
          this,
          Invocation.method(
            #totalMonthlyInvoicesAmount,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.MonthlyInvoices>.value(_FakeMonthlyInvoices_19(
          this,
          Invocation.method(
            #totalMonthlyInvoicesAmount,
            [],
            {
              #businessId: businessId,
              #monthly: monthly,
            },
          ),
        )),
      ) as _i15.Future<_i7.MonthlyInvoices>);
}

/// A class which mocks [MerchantService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMerchantService extends _i1.Mock implements _i8.MerchantService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i8.MerchantCreationResult> createMerchant({
    required String? name,
    required String? email,
    required String? businessId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMerchant,
          [],
          {
            #name: name,
            #email: email,
            #businessId: businessId,
          },
        ),
        returnValue: _i15.Future<_i8.MerchantCreationResult>.value(
            _FakeMerchantCreationResult_20(
          this,
          Invocation.method(
            #createMerchant,
            [],
            {
              #name: name,
              #email: email,
              #businessId: businessId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i8.MerchantCreationResult>.value(
                _FakeMerchantCreationResult_20(
          this,
          Invocation.method(
            #createMerchant,
            [],
            {
              #name: name,
              #email: email,
              #businessId: businessId,
            },
          ),
        )),
      ) as _i15.Future<_i8.MerchantCreationResult>);

  @override
  _i15.Future<List<_i8.Merchants>> getMerchantsByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMerchantsByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i8.Merchants>>.value(<_i8.Merchants>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i8.Merchants>>.value(<_i8.Merchants>[]),
      ) as _i15.Future<List<_i8.Merchants>>);
}

/// A class which mocks [ExpenseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpenseService extends _i1.Mock implements _i9.ExpenseService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i9.ExpenseCreationResult> createExpenses({
    required String? description,
    required String? expenseCategoryId,
    required String? businessId,
    required String? merchantId,
    bool? reccuring,
    required String? expenseDate,
    required List<_i9.ExpenseDetail>? expenseItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createExpenses,
          [],
          {
            #description: description,
            #expenseCategoryId: expenseCategoryId,
            #businessId: businessId,
            #merchantId: merchantId,
            #reccuring: reccuring,
            #expenseDate: expenseDate,
            #expenseItem: expenseItem,
          },
        ),
        returnValue: _i15.Future<_i9.ExpenseCreationResult>.value(
            _FakeExpenseCreationResult_21(
          this,
          Invocation.method(
            #createExpenses,
            [],
            {
              #description: description,
              #expenseCategoryId: expenseCategoryId,
              #businessId: businessId,
              #merchantId: merchantId,
              #reccuring: reccuring,
              #expenseDate: expenseDate,
              #expenseItem: expenseItem,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i9.ExpenseCreationResult>.value(
            _FakeExpenseCreationResult_21(
          this,
          Invocation.method(
            #createExpenses,
            [],
            {
              #description: description,
              #expenseCategoryId: expenseCategoryId,
              #businessId: businessId,
              #merchantId: merchantId,
              #reccuring: reccuring,
              #expenseDate: expenseDate,
              #expenseItem: expenseItem,
            },
          ),
        )),
      ) as _i15.Future<_i9.ExpenseCreationResult>);

  @override
  _i15.Future<_i9.Expenses> getExpenseById({required String? expenseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpenseById,
          [],
          {#expenseId: expenseId},
        ),
        returnValue: _i15.Future<_i9.Expenses>.value(_FakeExpenses_22(
          this,
          Invocation.method(
            #getExpenseById,
            [],
            {#expenseId: expenseId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i9.Expenses>.value(_FakeExpenses_22(
          this,
          Invocation.method(
            #getExpenseById,
            [],
            {#expenseId: expenseId},
          ),
        )),
      ) as _i15.Future<_i9.Expenses>);

  @override
  _i15.Future<_i9.ExpenseUpdateResult> updateExpenses({
    required String? expenseId,
    String? description,
    String? expenseCategoryId,
    String? merchantId,
    String? expenseDate,
    bool? reccuring,
    List<_i9.ExpenseDetail>? expenseItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateExpenses,
          [],
          {
            #expenseId: expenseId,
            #description: description,
            #expenseCategoryId: expenseCategoryId,
            #merchantId: merchantId,
            #expenseDate: expenseDate,
            #reccuring: reccuring,
            #expenseItem: expenseItem,
          },
        ),
        returnValue: _i15.Future<_i9.ExpenseUpdateResult>.value(
            _FakeExpenseUpdateResult_23(
          this,
          Invocation.method(
            #updateExpenses,
            [],
            {
              #expenseId: expenseId,
              #description: description,
              #expenseCategoryId: expenseCategoryId,
              #merchantId: merchantId,
              #expenseDate: expenseDate,
              #reccuring: reccuring,
              #expenseItem: expenseItem,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i9.ExpenseUpdateResult>.value(
            _FakeExpenseUpdateResult_23(
          this,
          Invocation.method(
            #updateExpenses,
            [],
            {
              #expenseId: expenseId,
              #description: description,
              #expenseCategoryId: expenseCategoryId,
              #merchantId: merchantId,
              #expenseDate: expenseDate,
              #reccuring: reccuring,
              #expenseItem: expenseItem,
            },
          ),
        )),
      ) as _i15.Future<_i9.ExpenseUpdateResult>);

  @override
  _i15.Future<List<_i9.Expenses>> getArchivedExpenseByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedExpenseByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue: _i15.Future<List<_i9.Expenses>>.value(<_i9.Expenses>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i9.Expenses>>.value(<_i9.Expenses>[]),
      ) as _i15.Future<List<_i9.Expenses>>);

  @override
  _i15.Future<List<_i9.Expenses>> getExpenseByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpenseByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue: _i15.Future<List<_i9.Expenses>>.value(<_i9.Expenses>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i9.Expenses>>.value(<_i9.Expenses>[]),
      ) as _i15.Future<List<_i9.Expenses>>);

  @override
  _i15.Future<bool> unarchiveExpense({required String? expenseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unarchiveExpense,
          [],
          {#expenseId: expenseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> archiveExpense({required String? expenseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveExpense,
          [],
          {#expenseId: expenseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deleteExpense({required String? expenseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteExpense,
          [],
          {#expenseId: expenseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i9.ExpenseStatusResult> markExpenseItemAsReceived({
    required String? expenseItemId,
    required String? businessId,
    required String? transactionDate,
    required num? quantityReceived,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markExpenseItemAsReceived,
          [],
          {
            #expenseItemId: expenseItemId,
            #businessId: businessId,
            #transactionDate: transactionDate,
            #quantityReceived: quantityReceived,
          },
        ),
        returnValue: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #markExpenseItemAsReceived,
            [],
            {
              #expenseItemId: expenseItemId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #quantityReceived: quantityReceived,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #markExpenseItemAsReceived,
            [],
            {
              #expenseItemId: expenseItemId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #quantityReceived: quantityReceived,
            },
          ),
        )),
      ) as _i15.Future<_i9.ExpenseStatusResult>);

  @override
  _i15.Future<_i9.ExpenseStatusResult> uploadMerchantInvoiceToExpense({
    required String? expenseId,
    required String? businessId,
    required String? invoiceDate,
    bool? match,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadMerchantInvoiceToExpense,
          [],
          {
            #expenseId: expenseId,
            #businessId: businessId,
            #invoiceDate: invoiceDate,
            #match: match,
          },
        ),
        returnValue: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #uploadMerchantInvoiceToExpense,
            [],
            {
              #expenseId: expenseId,
              #businessId: businessId,
              #invoiceDate: invoiceDate,
              #match: match,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #uploadMerchantInvoiceToExpense,
            [],
            {
              #expenseId: expenseId,
              #businessId: businessId,
              #invoiceDate: invoiceDate,
              #match: match,
            },
          ),
        )),
      ) as _i15.Future<_i9.ExpenseStatusResult>);

  @override
  _i15.Future<_i9.ExpenseStatusResult> makeExpensePayment({
    required String? expenseId,
    required String? businessId,
    required String? transactionDate,
    required String? description,
    required num? total,
    String? file,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeExpensePayment,
          [],
          {
            #expenseId: expenseId,
            #businessId: businessId,
            #transactionDate: transactionDate,
            #description: description,
            #total: total,
            #file: file,
          },
        ),
        returnValue: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #makeExpensePayment,
            [],
            {
              #expenseId: expenseId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #description: description,
              #total: total,
              #file: file,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i9.ExpenseStatusResult>.value(
            _FakeExpenseStatusResult_24(
          this,
          Invocation.method(
            #makeExpensePayment,
            [],
            {
              #expenseId: expenseId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #description: description,
              #total: total,
              #file: file,
            },
          ),
        )),
      ) as _i15.Future<_i9.ExpenseStatusResult>);

  @override
  _i15.Future<List<_i9.ExpenseCategory>> getExpenseCategoryWithSets() =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpenseCategoryWithSets,
          [],
        ),
        returnValue: _i15.Future<List<_i9.ExpenseCategory>>.value(
            <_i9.ExpenseCategory>[]),
        returnValueForMissingStub: _i15.Future<List<_i9.ExpenseCategory>>.value(
            <_i9.ExpenseCategory>[]),
      ) as _i15.Future<List<_i9.ExpenseCategory>>);

  @override
  _i15.Future<List<_i9.COA>> getCOAs() => (super.noSuchMethod(
        Invocation.method(
          #getCOAs,
          [],
        ),
        returnValue: _i15.Future<List<_i9.COA>>.value(<_i9.COA>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i9.COA>>.value(<_i9.COA>[]),
      ) as _i15.Future<List<_i9.COA>>);
}

/// A class which mocks [PurchaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchaseService extends _i1.Mock implements _i10.PurchaseService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i10.PurchaseCreationResult> createPurchaseEntry({
    required List<_i10.PurchaseItemDetail>? purchaseItem,
    required String? description,
    required String? businessId,
    required String? merchantId,
    required String? transactionDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPurchaseEntry,
          [],
          {
            #purchaseItem: purchaseItem,
            #description: description,
            #businessId: businessId,
            #merchantId: merchantId,
            #transactionDate: transactionDate,
          },
        ),
        returnValue: _i15.Future<_i10.PurchaseCreationResult>.value(
            _FakePurchaseCreationResult_25(
          this,
          Invocation.method(
            #createPurchaseEntry,
            [],
            {
              #purchaseItem: purchaseItem,
              #description: description,
              #businessId: businessId,
              #merchantId: merchantId,
              #transactionDate: transactionDate,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i10.PurchaseCreationResult>.value(
                _FakePurchaseCreationResult_25(
          this,
          Invocation.method(
            #createPurchaseEntry,
            [],
            {
              #purchaseItem: purchaseItem,
              #description: description,
              #businessId: businessId,
              #merchantId: merchantId,
              #transactionDate: transactionDate,
            },
          ),
        )),
      ) as _i15.Future<_i10.PurchaseCreationResult>);

  @override
  _i15.Future<_i10.Purchases> getPurchaseById({required String? purchaseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchaseById,
          [],
          {#purchaseId: purchaseId},
        ),
        returnValue: _i15.Future<_i10.Purchases>.value(_FakePurchases_26(
          this,
          Invocation.method(
            #getPurchaseById,
            [],
            {#purchaseId: purchaseId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i10.Purchases>.value(_FakePurchases_26(
          this,
          Invocation.method(
            #getPurchaseById,
            [],
            {#purchaseId: purchaseId},
          ),
        )),
      ) as _i15.Future<_i10.Purchases>);

  @override
  _i15.Future<bool> unArchivePurchase({required String? purchaseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unArchivePurchase,
          [],
          {#purchaseId: purchaseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> archivePurchase({required String? purchaseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archivePurchase,
          [],
          {#purchaseId: purchaseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deletePurchase({required String? purchaseId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePurchase,
          [],
          {#purchaseId: purchaseId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i10.PurchaseStatusResult> makePurchasePayment({
    required String? purchaseId,
    required String? businessId,
    required String? transactionDate,
    required String? description,
    required num? total,
    String? file,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makePurchasePayment,
          [],
          {
            #purchaseId: purchaseId,
            #businessId: businessId,
            #transactionDate: transactionDate,
            #description: description,
            #total: total,
            #file: file,
          },
        ),
        returnValue: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #makePurchasePayment,
            [],
            {
              #purchaseId: purchaseId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #description: description,
              #total: total,
              #file: file,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #makePurchasePayment,
            [],
            {
              #purchaseId: purchaseId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #description: description,
              #total: total,
              #file: file,
            },
          ),
        )),
      ) as _i15.Future<_i10.PurchaseStatusResult>);

  @override
  _i15.Future<_i10.PurchaseStatusResult> uploadMerchantInvoiceToPurchase({
    required String? purchaseId,
    required String? businessId,
    required String? invoiceDate,
    required bool? match,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadMerchantInvoiceToPurchase,
          [],
          {
            #purchaseId: purchaseId,
            #businessId: businessId,
            #invoiceDate: invoiceDate,
            #match: match,
          },
        ),
        returnValue: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #uploadMerchantInvoiceToPurchase,
            [],
            {
              #purchaseId: purchaseId,
              #businessId: businessId,
              #invoiceDate: invoiceDate,
              #match: match,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #uploadMerchantInvoiceToPurchase,
            [],
            {
              #purchaseId: purchaseId,
              #businessId: businessId,
              #invoiceDate: invoiceDate,
              #match: match,
            },
          ),
        )),
      ) as _i15.Future<_i10.PurchaseStatusResult>);

  @override
  _i15.Future<_i10.PurchaseStatusResult> markPurchaseItemAsReceived({
    required String? purchaseItemId,
    required String? businessId,
    required String? transactionDate,
    required int? quantityRecieved,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #markPurchaseItemAsReceived,
          [],
          {
            #purchaseItemId: purchaseItemId,
            #businessId: businessId,
            #transactionDate: transactionDate,
            #quantityRecieved: quantityRecieved,
          },
        ),
        returnValue: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #markPurchaseItemAsReceived,
            [],
            {
              #purchaseItemId: purchaseItemId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #quantityRecieved: quantityRecieved,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i10.PurchaseStatusResult>.value(
            _FakePurchaseStatusResult_27(
          this,
          Invocation.method(
            #markPurchaseItemAsReceived,
            [],
            {
              #purchaseItemId: purchaseItemId,
              #businessId: businessId,
              #transactionDate: transactionDate,
              #quantityRecieved: quantityRecieved,
            },
          ),
        )),
      ) as _i15.Future<_i10.PurchaseStatusResult>);

  @override
  _i15.Future<bool> sendPurchase({
    required String? purchaseId,
    bool? copy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPurchase,
          [],
          {
            #purchaseId: purchaseId,
            #copy: copy,
          },
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i10.PurchaseUpdateResult> updatePurchases({
    required String? purchaseId,
    String? description,
    String? merchantId,
    String? transactionDate,
    List<_i10.PurchaseItemDetail>? purchaseItem,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePurchases,
          [],
          {
            #purchaseId: purchaseId,
            #description: description,
            #merchantId: merchantId,
            #transactionDate: transactionDate,
            #purchaseItem: purchaseItem,
          },
        ),
        returnValue: _i15.Future<_i10.PurchaseUpdateResult>.value(
            _FakePurchaseUpdateResult_28(
          this,
          Invocation.method(
            #updatePurchases,
            [],
            {
              #purchaseId: purchaseId,
              #description: description,
              #merchantId: merchantId,
              #transactionDate: transactionDate,
              #purchaseItem: purchaseItem,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i10.PurchaseUpdateResult>.value(
            _FakePurchaseUpdateResult_28(
          this,
          Invocation.method(
            #updatePurchases,
            [],
            {
              #purchaseId: purchaseId,
              #description: description,
              #merchantId: merchantId,
              #transactionDate: transactionDate,
              #purchaseItem: purchaseItem,
            },
          ),
        )),
      ) as _i15.Future<_i10.PurchaseUpdateResult>);

  @override
  _i15.Future<List<_i10.Purchases>> getPurchaseByBusiness({
    required String? businessId,
    num? take,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPurchaseByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
          },
        ),
        returnValue:
            _i15.Future<List<_i10.Purchases>>.value(<_i10.Purchases>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i10.Purchases>>.value(<_i10.Purchases>[]),
      ) as _i15.Future<List<_i10.Purchases>>);

  @override
  _i15.Future<List<_i10.Purchases>> getArchivedPurchaseByBusiness({
    required String? businessId,
    num? take,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedPurchaseByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
          },
        ),
        returnValue:
            _i15.Future<List<_i10.Purchases>>.value(<_i10.Purchases>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i10.Purchases>>.value(<_i10.Purchases>[]),
      ) as _i15.Future<List<_i10.Purchases>>);
}

/// A class which mocks [SalesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSalesService extends _i1.Mock implements _i11.SalesService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i11.SaleCreationResult> createSales({
    required String? customerId,
    required String? businessId,
    required List<_i11.ItemDetail>? item,
    List<_i11.SaleExpenses>? saleExpense,
    List<_i11.SaleServiceExpenseEntry>? saleServiceExpense,
    required double? vat,
    required String? dueDate,
    required String? dateOfIssue,
    required String? description,
    String? note,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSales,
          [],
          {
            #customerId: customerId,
            #businessId: businessId,
            #item: item,
            #saleExpense: saleExpense,
            #saleServiceExpense: saleServiceExpense,
            #vat: vat,
            #dueDate: dueDate,
            #dateOfIssue: dateOfIssue,
            #description: description,
            #note: note,
          },
        ),
        returnValue: _i15.Future<_i11.SaleCreationResult>.value(
            _FakeSaleCreationResult_29(
          this,
          Invocation.method(
            #createSales,
            [],
            {
              #customerId: customerId,
              #businessId: businessId,
              #item: item,
              #saleExpense: saleExpense,
              #saleServiceExpense: saleServiceExpense,
              #vat: vat,
              #dueDate: dueDate,
              #dateOfIssue: dateOfIssue,
              #description: description,
              #note: note,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i11.SaleCreationResult>.value(
            _FakeSaleCreationResult_29(
          this,
          Invocation.method(
            #createSales,
            [],
            {
              #customerId: customerId,
              #businessId: businessId,
              #item: item,
              #saleExpense: saleExpense,
              #saleServiceExpense: saleServiceExpense,
              #vat: vat,
              #dueDate: dueDate,
              #dateOfIssue: dateOfIssue,
              #description: description,
              #note: note,
            },
          ),
        )),
      ) as _i15.Future<_i11.SaleCreationResult>);

  @override
  _i15.Future<_i11.SaleUpdateResult> updateSales({
    required String? saleId,
    String? description,
    String? customerId,
    String? dueDate,
    String? dateOfIssue,
    String? note,
    double? vat,
    List<_i11.SaleExpenses>? saleExpense,
    List<_i11.SaleServiceExpenseEntry>? saleServiceExpense,
    List<_i11.ItemDetail>? item,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSales,
          [],
          {
            #saleId: saleId,
            #description: description,
            #customerId: customerId,
            #dueDate: dueDate,
            #dateOfIssue: dateOfIssue,
            #note: note,
            #vat: vat,
            #saleExpense: saleExpense,
            #saleServiceExpense: saleServiceExpense,
            #item: item,
          },
        ),
        returnValue:
            _i15.Future<_i11.SaleUpdateResult>.value(_FakeSaleUpdateResult_30(
          this,
          Invocation.method(
            #updateSales,
            [],
            {
              #saleId: saleId,
              #description: description,
              #customerId: customerId,
              #dueDate: dueDate,
              #dateOfIssue: dateOfIssue,
              #note: note,
              #vat: vat,
              #saleExpense: saleExpense,
              #saleServiceExpense: saleServiceExpense,
              #item: item,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.SaleUpdateResult>.value(_FakeSaleUpdateResult_30(
          this,
          Invocation.method(
            #updateSales,
            [],
            {
              #saleId: saleId,
              #description: description,
              #customerId: customerId,
              #dueDate: dueDate,
              #dateOfIssue: dateOfIssue,
              #note: note,
              #vat: vat,
              #saleExpense: saleExpense,
              #saleServiceExpense: saleServiceExpense,
              #item: item,
            },
          ),
        )),
      ) as _i15.Future<_i11.SaleUpdateResult>);

  @override
  _i15.Future<_i11.Sales> getSaleById({required String? saleId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSaleById,
          [],
          {#saleId: saleId},
        ),
        returnValue: _i15.Future<_i11.Sales>.value(_FakeSales_31(
          this,
          Invocation.method(
            #getSaleById,
            [],
            {#saleId: saleId},
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i11.Sales>.value(_FakeSales_31(
          this,
          Invocation.method(
            #getSaleById,
            [],
            {#saleId: saleId},
          ),
        )),
      ) as _i15.Future<_i11.Sales>);

  @override
  _i15.Future<List<_i11.Sales>> getSaleByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSaleByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue: _i15.Future<List<_i11.Sales>>.value(<_i11.Sales>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i11.Sales>>.value(<_i11.Sales>[]),
      ) as _i15.Future<List<_i11.Sales>>);

  @override
  _i15.Future<List<_i11.Sales>> getArchivedSaleByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedSaleByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue: _i15.Future<List<_i11.Sales>>.value(<_i11.Sales>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i11.Sales>>.value(<_i11.Sales>[]),
      ) as _i15.Future<List<_i11.Sales>>);

  @override
  _i15.Future<bool> unarchiveSale({required String? saleId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unarchiveSale,
          [],
          {#saleId: saleId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> archiveSale({required String? saleId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveSale,
          [],
          {#saleId: saleId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deleteSale({required String? saleId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSale,
          [],
          {#saleId: saleId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i11.SaleStatusResult> effectSaleExpense({
    required String? expenseId,
    required String? transactionDate,
    required String? description,
    String? file,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #effectSaleExpense,
          [],
          {
            #expenseId: expenseId,
            #transactionDate: transactionDate,
            #description: description,
            #file: file,
          },
        ),
        returnValue:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #effectSaleExpense,
            [],
            {
              #expenseId: expenseId,
              #transactionDate: transactionDate,
              #description: description,
              #file: file,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #effectSaleExpense,
            [],
            {
              #expenseId: expenseId,
              #transactionDate: transactionDate,
              #description: description,
              #file: file,
            },
          ),
        )),
      ) as _i15.Future<_i11.SaleStatusResult>);

  @override
  _i15.Future<_i11.SaleStatusResult> makeSalePayment({
    required String? saleId,
    required String? transactionDate,
    required String? description,
    String? file,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeSalePayment,
          [],
          {
            #saleId: saleId,
            #transactionDate: transactionDate,
            #description: description,
            #file: file,
          },
        ),
        returnValue:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #makeSalePayment,
            [],
            {
              #saleId: saleId,
              #transactionDate: transactionDate,
              #description: description,
              #file: file,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #makeSalePayment,
            [],
            {
              #saleId: saleId,
              #transactionDate: transactionDate,
              #description: description,
              #file: file,
            },
          ),
        )),
      ) as _i15.Future<_i11.SaleStatusResult>);

  @override
  _i15.Future<_i11.SaleStatusResult> markSaleAsDelivered(
          {required String? saleId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markSaleAsDelivered,
          [],
          {#saleId: saleId},
        ),
        returnValue:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #markSaleAsDelivered,
            [],
            {#saleId: saleId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.SaleStatusResult>.value(_FakeSaleStatusResult_32(
          this,
          Invocation.method(
            #markSaleAsDelivered,
            [],
            {#saleId: saleId},
          ),
        )),
      ) as _i15.Future<_i11.SaleStatusResult>);

  @override
  _i15.Future<bool> sendInvoice({
    required String? invoiceId,
    bool? copy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendInvoice,
          [],
          {
            #invoiceId: invoiceId,
            #copy: copy,
          },
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i11.CustomerCreationResult> createCustomer({
    required String? name,
    required String? mobile,
    required String? email,
    String? address,
    required String? businessId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCustomer,
          [],
          {
            #name: name,
            #mobile: mobile,
            #email: email,
            #address: address,
            #businessId: businessId,
          },
        ),
        returnValue: _i15.Future<_i11.CustomerCreationResult>.value(
            _FakeCustomerCreationResult_33(
          this,
          Invocation.method(
            #createCustomer,
            [],
            {
              #name: name,
              #mobile: mobile,
              #email: email,
              #address: address,
              #businessId: businessId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.CustomerCreationResult>.value(
                _FakeCustomerCreationResult_33(
          this,
          Invocation.method(
            #createCustomer,
            [],
            {
              #name: name,
              #mobile: mobile,
              #email: email,
              #address: address,
              #businessId: businessId,
            },
          ),
        )),
      ) as _i15.Future<_i11.CustomerCreationResult>);

  @override
  _i15.Future<_i11.Customers> getCustomerById({required String? customerId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomerById,
          [],
          {#customerId: customerId},
        ),
        returnValue: _i15.Future<_i11.Customers>.value(_FakeCustomers_34(
          this,
          Invocation.method(
            #getCustomerById,
            [],
            {#customerId: customerId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i11.Customers>.value(_FakeCustomers_34(
          this,
          Invocation.method(
            #getCustomerById,
            [],
            {#customerId: customerId},
          ),
        )),
      ) as _i15.Future<_i11.Customers>);

  @override
  _i15.Future<_i11.CustomerUpdateResult> updateCustomers({
    required String? customerId,
    String? name,
    String? address,
    String? mobile,
    String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCustomers,
          [],
          {
            #customerId: customerId,
            #name: name,
            #address: address,
            #mobile: mobile,
            #email: email,
          },
        ),
        returnValue: _i15.Future<_i11.CustomerUpdateResult>.value(
            _FakeCustomerUpdateResult_35(
          this,
          Invocation.method(
            #updateCustomers,
            [],
            {
              #customerId: customerId,
              #name: name,
              #address: address,
              #mobile: mobile,
              #email: email,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i11.CustomerUpdateResult>.value(
            _FakeCustomerUpdateResult_35(
          this,
          Invocation.method(
            #updateCustomers,
            [],
            {
              #customerId: customerId,
              #name: name,
              #address: address,
              #mobile: mobile,
              #email: email,
            },
          ),
        )),
      ) as _i15.Future<_i11.CustomerUpdateResult>);

  @override
  _i15.Future<bool> archiveCustomer({required String? customerId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveCustomer,
          [],
          {#customerId: customerId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> unArchiveCustomer({required String? customerId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unArchiveCustomer,
          [],
          {#customerId: customerId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deleteCustomer({required String? customerId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCustomer,
          [],
          {#customerId: customerId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<List<_i11.Customers>> getCustomerByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomerByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue:
            _i15.Future<List<_i11.Customers>>.value(<_i11.Customers>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i11.Customers>>.value(<_i11.Customers>[]),
      ) as _i15.Future<List<_i11.Customers>>);

  @override
  _i15.Future<List<_i11.Customers>> getArchivedCustomerByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedCustomerByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue:
            _i15.Future<List<_i11.Customers>>.value(<_i11.Customers>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i11.Customers>>.value(<_i11.Customers>[]),
      ) as _i15.Future<List<_i11.Customers>>);
}

/// A class which mocks [ProductsServicesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsServicesService extends _i1.Mock
    implements _i12.ProductsServicesService {
  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<_i12.ProductCreationResult> createProducts({
    required String? productName,
    required double? price,
    required double? initialStockLevel,
    required String? businessId,
    required String? productUnitId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducts,
          [],
          {
            #productName: productName,
            #price: price,
            #initialStockLevel: initialStockLevel,
            #businessId: businessId,
            #productUnitId: productUnitId,
          },
        ),
        returnValue: _i15.Future<_i12.ProductCreationResult>.value(
            _FakeProductCreationResult_36(
          this,
          Invocation.method(
            #createProducts,
            [],
            {
              #productName: productName,
              #price: price,
              #initialStockLevel: initialStockLevel,
              #businessId: businessId,
              #productUnitId: productUnitId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.ProductCreationResult>.value(
                _FakeProductCreationResult_36(
          this,
          Invocation.method(
            #createProducts,
            [],
            {
              #productName: productName,
              #price: price,
              #initialStockLevel: initialStockLevel,
              #businessId: businessId,
              #productUnitId: productUnitId,
            },
          ),
        )),
      ) as _i15.Future<_i12.ProductCreationResult>);

  @override
  _i15.Future<_i12.ProductUnitCreationResult> createBusinessProductUnit({
    required String? unitName,
    required String? businessId,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBusinessProductUnit,
          [],
          {
            #unitName: unitName,
            #businessId: businessId,
            #description: description,
          },
        ),
        returnValue: _i15.Future<_i12.ProductUnitCreationResult>.value(
            _FakeProductUnitCreationResult_37(
          this,
          Invocation.method(
            #createBusinessProductUnit,
            [],
            {
              #unitName: unitName,
              #businessId: businessId,
              #description: description,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.ProductUnitCreationResult>.value(
                _FakeProductUnitCreationResult_37(
          this,
          Invocation.method(
            #createBusinessProductUnit,
            [],
            {
              #unitName: unitName,
              #businessId: businessId,
              #description: description,
            },
          ),
        )),
      ) as _i15.Future<_i12.ProductUnitCreationResult>);

  @override
  _i15.Future<_i12.ProductUpdateResult> updateProducts({
    required String? productId,
    String? productName,
    double? price,
    num? reorderLevel,
    bool? trackReorderLevel,
    String? productUnitId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducts,
          [],
          {
            #productId: productId,
            #productName: productName,
            #price: price,
            #reorderLevel: reorderLevel,
            #trackReorderLevel: trackReorderLevel,
            #productUnitId: productUnitId,
          },
        ),
        returnValue: _i15.Future<_i12.ProductUpdateResult>.value(
            _FakeProductUpdateResult_38(
          this,
          Invocation.method(
            #updateProducts,
            [],
            {
              #productId: productId,
              #productName: productName,
              #price: price,
              #reorderLevel: reorderLevel,
              #trackReorderLevel: trackReorderLevel,
              #productUnitId: productUnitId,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i12.ProductUpdateResult>.value(
            _FakeProductUpdateResult_38(
          this,
          Invocation.method(
            #updateProducts,
            [],
            {
              #productId: productId,
              #productName: productName,
              #price: price,
              #reorderLevel: reorderLevel,
              #trackReorderLevel: trackReorderLevel,
              #productUnitId: productUnitId,
            },
          ),
        )),
      ) as _i15.Future<_i12.ProductUpdateResult>);

  @override
  _i15.Future<_i12.Products> getProductById({required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [],
          {#productId: productId},
        ),
        returnValue: _i15.Future<_i12.Products>.value(_FakeProducts_39(
          this,
          Invocation.method(
            #getProductById,
            [],
            {#productId: productId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Products>.value(_FakeProducts_39(
          this,
          Invocation.method(
            #getProductById,
            [],
            {#productId: productId},
          ),
        )),
      ) as _i15.Future<_i12.Products>);

  @override
  _i15.Future<bool> archiveProduct({required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveProduct,
          [],
          {#productId: productId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> unArchiveProduct({required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unArchiveProduct,
          [],
          {#productId: productId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deleteProduct({required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [],
          {#productId: productId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<List<_i12.ProductUnit>> getProductUnits() => (super.noSuchMethod(
        Invocation.method(
          #getProductUnits,
          [],
        ),
        returnValue:
            _i15.Future<List<_i12.ProductUnit>>.value(<_i12.ProductUnit>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.ProductUnit>>.value(<_i12.ProductUnit>[]),
      ) as _i15.Future<List<_i12.ProductUnit>>);

  @override
  _i15.Future<_i12.ServiceCreationResult> createServices({
    required String? name,
    required double? price,
    required String? businessId,
    required String? serviceUnitId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createServices,
          [],
          {
            #name: name,
            #price: price,
            #businessId: businessId,
            #serviceUnitId: serviceUnitId,
          },
        ),
        returnValue: _i15.Future<_i12.ServiceCreationResult>.value(
            _FakeServiceCreationResult_40(
          this,
          Invocation.method(
            #createServices,
            [],
            {
              #name: name,
              #price: price,
              #businessId: businessId,
              #serviceUnitId: serviceUnitId,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.ServiceCreationResult>.value(
                _FakeServiceCreationResult_40(
          this,
          Invocation.method(
            #createServices,
            [],
            {
              #name: name,
              #price: price,
              #businessId: businessId,
              #serviceUnitId: serviceUnitId,
            },
          ),
        )),
      ) as _i15.Future<_i12.ServiceCreationResult>);

  @override
  _i15.Future<_i12.ServiceUnitCreationResult> createBusinessServiceUnit({
    required String? unitName,
    required String? businessId,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBusinessServiceUnit,
          [],
          {
            #unitName: unitName,
            #businessId: businessId,
            #description: description,
          },
        ),
        returnValue: _i15.Future<_i12.ServiceUnitCreationResult>.value(
            _FakeServiceUnitCreationResult_41(
          this,
          Invocation.method(
            #createBusinessServiceUnit,
            [],
            {
              #unitName: unitName,
              #businessId: businessId,
              #description: description,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.ServiceUnitCreationResult>.value(
                _FakeServiceUnitCreationResult_41(
          this,
          Invocation.method(
            #createBusinessServiceUnit,
            [],
            {
              #unitName: unitName,
              #businessId: businessId,
              #description: description,
            },
          ),
        )),
      ) as _i15.Future<_i12.ServiceUnitCreationResult>);

  @override
  _i15.Future<_i12.ServiceUpdateResult> updateServices({
    required String? serviceId,
    String? name,
    double? price,
    String? serviceUnitId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateServices,
          [],
          {
            #serviceId: serviceId,
            #name: name,
            #price: price,
            #serviceUnitId: serviceUnitId,
          },
        ),
        returnValue: _i15.Future<_i12.ServiceUpdateResult>.value(
            _FakeServiceUpdateResult_42(
          this,
          Invocation.method(
            #updateServices,
            [],
            {
              #serviceId: serviceId,
              #name: name,
              #price: price,
              #serviceUnitId: serviceUnitId,
            },
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i12.ServiceUpdateResult>.value(
            _FakeServiceUpdateResult_42(
          this,
          Invocation.method(
            #updateServices,
            [],
            {
              #serviceId: serviceId,
              #name: name,
              #price: price,
              #serviceUnitId: serviceUnitId,
            },
          ),
        )),
      ) as _i15.Future<_i12.ServiceUpdateResult>);

  @override
  _i15.Future<_i12.Services> getServiceById({required String? serviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServiceById,
          [],
          {#serviceId: serviceId},
        ),
        returnValue: _i15.Future<_i12.Services>.value(_FakeServices_43(
          this,
          Invocation.method(
            #getServiceById,
            [],
            {#serviceId: serviceId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Services>.value(_FakeServices_43(
          this,
          Invocation.method(
            #getServiceById,
            [],
            {#serviceId: serviceId},
          ),
        )),
      ) as _i15.Future<_i12.Services>);

  @override
  _i15.Future<bool> archiveService({required String? serviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveService,
          [],
          {#serviceId: serviceId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> unArchiveService({required String? serviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unArchiveService,
          [],
          {#serviceId: serviceId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<bool> deleteService({required String? serviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteService,
          [],
          {#serviceId: serviceId},
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<List<_i12.ServiceUnit>> getServiceUnits(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServiceUnits,
          [],
          {#businessId: businessId},
        ),
        returnValue:
            _i15.Future<List<_i12.ServiceUnit>>.value(<_i12.ServiceUnit>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.ServiceUnit>>.value(<_i12.ServiceUnit>[]),
      ) as _i15.Future<List<_i12.ServiceUnit>>);

  @override
  _i15.Future<List<_i12.Items>> getProductOrServiceByBusiness({
    required String? businessId,
    num? take,
    String? cursor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductOrServiceByBusiness,
          [],
          {
            #businessId: businessId,
            #take: take,
            #cursor: cursor,
          },
        ),
        returnValue: _i15.Future<List<_i12.Items>>.value(<_i12.Items>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.Items>>.value(<_i12.Items>[]),
      ) as _i15.Future<List<_i12.Items>>);

  @override
  _i15.Future<List<_i12.Products>> getProductsByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i12.Products>>.value(<_i12.Products>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.Products>>.value(<_i12.Products>[]),
      ) as _i15.Future<List<_i12.Products>>);

  @override
  _i15.Future<List<_i12.Products>> getArchivedProductsByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedProductsByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i12.Products>>.value(<_i12.Products>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.Products>>.value(<_i12.Products>[]),
      ) as _i15.Future<List<_i12.Products>>);

  @override
  _i15.Future<List<_i12.Services>> getServiceByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServiceByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i12.Services>>.value(<_i12.Services>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.Services>>.value(<_i12.Services>[]),
      ) as _i15.Future<List<_i12.Services>>);

  @override
  _i15.Future<List<_i12.Services>> getArchivedServiceByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchivedServiceByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue: _i15.Future<List<_i12.Services>>.value(<_i12.Services>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i12.Services>>.value(<_i12.Services>[]),
      ) as _i15.Future<List<_i12.Services>>);
}

/// A class which mocks [BillingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillingService extends _i1.Mock implements _i13.BillingService {
  @override
  _i2.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
        returnValueForMissingStub: _FakeNavigationService_0(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i2.NavigationService);

  @override
  _i3.ValueNotifier<_i17.GraphQLClient> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<_i17.GraphQLClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ValueNotifier<_i17.GraphQLClient>);

  @override
  set client(_i3.ValueNotifier<_i17.GraphQLClient>? _client) =>
      super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.Future<bool> isSubscriptionValid() => (super.noSuchMethod(
        Invocation.method(
          #isSubscriptionValid,
          [],
        ),
        returnValue: _i15.Future<bool>.value(false),
        returnValueForMissingStub: _i15.Future<bool>.value(false),
      ) as _i15.Future<bool>);

  @override
  _i15.Future<_i13.Subscriptions> getCurrentSubscriptionByBusiness(
          {required String? businessId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentSubscriptionByBusiness,
          [],
          {#businessId: businessId},
        ),
        returnValue:
            _i15.Future<_i13.Subscriptions>.value(_FakeSubscriptions_44(
          this,
          Invocation.method(
            #getCurrentSubscriptionByBusiness,
            [],
            {#businessId: businessId},
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i13.Subscriptions>.value(_FakeSubscriptions_44(
          this,
          Invocation.method(
            #getCurrentSubscriptionByBusiness,
            [],
            {#businessId: businessId},
          ),
        )),
      ) as _i15.Future<_i13.Subscriptions>);

  @override
  _i15.Future<_i13.SubscriptionCreationResult> createSubscriptionNewCardA({
    required String? businessId,
    required String? currentPlanId,
    required num? tax,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSubscriptionNewCardA,
          [],
          {
            #businessId: businessId,
            #currentPlanId: currentPlanId,
            #tax: tax,
          },
        ),
        returnValue: _i15.Future<_i13.SubscriptionCreationResult>.value(
            _FakeSubscriptionCreationResult_45(
          this,
          Invocation.method(
            #createSubscriptionNewCardA,
            [],
            {
              #businessId: businessId,
              #currentPlanId: currentPlanId,
              #tax: tax,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i13.SubscriptionCreationResult>.value(
                _FakeSubscriptionCreationResult_45(
          this,
          Invocation.method(
            #createSubscriptionNewCardA,
            [],
            {
              #businessId: businessId,
              #currentPlanId: currentPlanId,
              #tax: tax,
            },
          ),
        )),
      ) as _i15.Future<_i13.SubscriptionCreationResult>);

  @override
  _i15.Future<_i13.SubscriptionCreationResultB> createSubscriptionNewCardB({
    required String? businessId,
    required String? currentPlanId,
    required String? reference,
    required num? tax,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSubscriptionNewCardB,
          [],
          {
            #businessId: businessId,
            #currentPlanId: currentPlanId,
            #reference: reference,
            #tax: tax,
          },
        ),
        returnValue: _i15.Future<_i13.SubscriptionCreationResultB>.value(
            _FakeSubscriptionCreationResultB_46(
          this,
          Invocation.method(
            #createSubscriptionNewCardB,
            [],
            {
              #businessId: businessId,
              #currentPlanId: currentPlanId,
              #reference: reference,
              #tax: tax,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i13.SubscriptionCreationResultB>.value(
                _FakeSubscriptionCreationResultB_46(
          this,
          Invocation.method(
            #createSubscriptionNewCardB,
            [],
            {
              #businessId: businessId,
              #currentPlanId: currentPlanId,
              #reference: reference,
              #tax: tax,
            },
          ),
        )),
      ) as _i15.Future<_i13.SubscriptionCreationResultB>);

  @override
  _i15.Future<List<_i13.Plans>> getPlans() => (super.noSuchMethod(
        Invocation.method(
          #getPlans,
          [],
        ),
        returnValue: _i15.Future<List<_i13.Plans>>.value(<_i13.Plans>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i13.Plans>>.value(<_i13.Plans>[]),
      ) as _i15.Future<List<_i13.Plans>>);
}
